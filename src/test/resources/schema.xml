<?xml version="1.0" encoding="UTF-8" ?>
<schema name="pin" version="1.4">

  <types>
    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
    <fieldtype name="binary" class="solr.BinaryField"/>

    <!--
	Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
    -->
    <fieldType   name="int"       class="solr.TrieIntField"      precisionStep="0"   omitNorms="true"    positionIncrementGap="0"/>
    <fieldType   name="float"     class="solr.TrieFloatField"    precisionStep="0"   omitNorms="true"    positionIncrementGap="0"/>
    <fieldType   name="long"      class="solr.TrieLongField"     precisionStep="0"   omitNorms="true"    positionIncrementGap="0"/>
    <fieldType   name="double"    class="solr.TrieDoubleField"   precisionStep="0"   omitNorms="true"    positionIncrementGap="0"/>

    <fieldType   name="tint"      class="solr.TrieIntField"      precisionStep="8"   omitNorms="true"    positionIncrementGap="0"/>
    <fieldType   name="tfloat"    class="solr.TrieFloatField"    precisionStep="8"   omitNorms="true"    positionIncrementGap="0"/>
    <fieldType   name="tlong"     class="solr.TrieLongField"     precisionStep="8"   omitNorms="true"    positionIncrementGap="0"/>
    <fieldType   name="tdouble"   class="solr.TrieDoubleField"   precisionStep="8"   omitNorms="true"    positionIncrementGap="0"/>

    <fieldType   name="date"      class="solr.TrieDateField"     omitNorms="true"    precisionStep="0"   positionIncrementGap="0"/>
    <fieldType   name="tdate"     class="solr.TrieDateField"     omitNorms="true"    precisionStep="6"   positionIncrementGap="0"/>


    <!-- The "RandomSortField" is not used to store or search any
	 data.  You can declare fields of this type it in your schema
	 to generate pseudo-random orderings of your docs for sorting 
	 purposes.  The ordering is generated based on the field name 
	 and the version of the index, As long as the index version
	 remains unchanged, and the same field name is reused,
	 the ordering of the docs will be consistent.  
	 If you want different psuedo-random orderings of documents,
	 for the same version of the index, use a dynamicField and
	 change the name
    -->
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />

    <fieldType name="tag" class="solr.TextField" omitNorms="true">
      <analyzer>
	<tokenizer class="solr.KeywordTokenizerFactory"/>
	<filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
	<tokenizer class="solr.StandardTokenizerFactory"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
	<!-- in this example, we will only use synonyms at query time
	     <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
	-->
	<filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
	<tokenizer class="solr.StandardTokenizerFactory"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
	<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
	<filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
	<tokenizer class="solr.CJKTokenizerFactory"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
	<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
	<filter class="solr.LowerCaseFilterFactory"/>
	<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
	<tokenizer class="solr.CJKTokenizerFactory"/>
	<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
	<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
	<filter class="solr.LowerCaseFilterFactory"/>
	<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- mmseg4j tokenizer -->
    <!--
	<fieldType name="textComplex" class="solr.TextField" >
	<analyzer>
	<tokenizer class="com.chenlb.mmseg4j.solr.MMSegTokenizerFactory" mode="complex" dicPath="dic"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
	<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
	<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
	</analyzer>
	</fieldType>
	<fieldType name="textMaxWord" class="solr.TextField" >
	<analyzer>
	<tokenizer class="com.chenlb.mmseg4j.solr.MMSegTokenizerFactory" mode="max-word" dicPath="dic"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
	<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
	<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
	</analyzer>
	</fieldType>
	<fieldType name="textSimple" class="solr.TextField" >
	<analyzer>
	<tokenizer class="com.chenlb.mmseg4j.solr.MMSegTokenizerFactory" mode="simple" dicPath="dic"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
	<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
	<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
	</analyzer>
	</fieldType>
    -->

    <!-- smart cn -->
    <!--
	<fieldType name="textSmartcn" class="solr.TextField" >
	<analyzer>
	<tokenizer class="solr.SmartChineseSentenceTokenizerFactory"/>
	<filter class="solr.SmartChineseWordTokenFilterFactory"/>
	<filter class="solr.LowerCaseFilterFactory"/>
	<filter class="solr.PositionFilterFactory" />
	</analyzer>
	</fieldType>
    -->

    <!-- ik-analyzer 4.2.0-->
    <fieldType name="text_ik" class="solr.TextField">
      <analyzer type="index" positionIncrementGap="100" autoGeneratePhraseQueries="true">
	<tokenizer class="org.wltea.analyzer.solr.IKTokenizerFactory" useSmart="false"/>
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
	<filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
	<tokenizer class="org.wltea.analyzer.solr.IKTokenizerFactory" useSmart="true" />
	<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
	<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
	<filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed,
	 any data added to them will be ignored outright.  --> 
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />
  </types>


  <fields>
    <field name="id"            type="string"  indexed="true"  stored="true"  required="true"/>
    <field name="raw_text"      type="string"  indexed="false" stored="false" required="false"/>
    <field name="via"           type="string"  indexed="true"  stored="false" required="true"/>

    <field name="from"          type="string"  indexed="true"  stored="false" required="false"/>
    <field name="category"      type="string"  indexed="true"  stored="false" required="false"/>
    <field name="searchable"    type="boolean" indexed="true"  stored="false" required="true"/>

    <field name="tag"           type="tag"     indexed="true"  stored="false" required="false"   multiValued="true"/>
    <field name="text"          type="text_ik"  indexed="true"  stored="false" multiValued="true"/>
    <field name="metion"        type="string"  indexed="true"  stored="false" required="false"   multiValued="true"/>

    <field name="_version_" type="long" indexed="true" stored="true"/>

    <!--meta tag fields-->
    <dynamicField name="mt_*"   type="tag"     indexed="true"  stored="false" multiValued="true"/>
    <dynamicField name="mb_*"   type="boolean" indexed="true"  stored="false"/>

  </fields>

  <uniqueKey>id</uniqueKey>

  <defaultSearchField>text</defaultSearchField>

  <solrQueryParser defaultOperator="OR"/>

  <copyField source="raw_text" dest="text"/>
  <copyField source="tag" dest="text"/>
  
</schema>
